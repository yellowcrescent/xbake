#!/usr/bin/env python
# coding=utf-8
###############################################################################
#
# yc_xbake
# YC XBake: Video file scanning, renaming, sub baking and transcoding utility
#
# @version  0.10
# @author   J. Hipps <jacob@ycnrg.org>
# @repo     https://bitbucket.org/yellowcrescent/yc_xbake
#
# Copyright (c) 2013-2015 J. Hipps / Neo-Retro Group
#
# https://ycnrg.org/
#
# @deps     xbake
#
###############################################################################

import sys
import os
import re
import json
import signal
import optparse
import operator
import time

# Logging
from xbake.common.logthis import C
from xbake.common.logthis import LL
from xbake.common.logthis import logthis
from xbake.common.logthis import loglevel

from xbake.common import rcfile
from xbake.xcode import ffmpeg

class xsetup:
    """Contains version information and globals"""
    ## Version info
    version = "0.10"
    vdate   = "06 Sep 2015"

def show_banner():
    """
    Display banner
    """
    print ""
    print C.CYN, "*** ", C.WHT, "yc_xbake", C.OFF
    print C.CYN, "*** ", C.CYN, "Version", xsetup.version, "(" + xsetup.vdate + ")", C.OFF
    print C.CYN, "*** ", C.GRN, "Copyright (c) 2013-2015 J. Hipps / Neo-Retro Group", C.OFF
    print C.CYN, "*** ", C.GRN, "J. Hipps <jacob@ycnrg.org>", C.OFF
    print C.CYN, "*** ", C.YEL, "https://ycnrg.org/", C.OFF
    print ""

def parse_cli():
    """
    Parse command-line options
    """
    oparser = optparse.OptionParser(usage="%prog <--xcode|--scan|--ssonly> [options] -i INFILE [-o OUTFILE]",version=xsetup.version+" ("+xsetup.vdate+")")

    # General options
    oparser.add_option('-L','--loglevel', action="store", dest="loglevel", default=LL.INFO, help="Logging output verbosity")
    oparser.add_option('-i','--infile', action="store", dest="infile", default=False, help="Input file or directory")
    oparser.add_option('-o','--out', action="store", dest="outfile", default=False, help="Output file")

    # Mode selection options
    opg_mode = optparse.OptionGroup(oparser, "Mode Selection", "Choose operations mode for XBake (required). These options are mutually-exclusive.")
    opg_mode.add_option('--xcode',action="store_true",dest="xcode",default=False,help="Transcode")
    opg_mode.add_option('--scan',action="store_true",dest="xcode",default=False,help="Scan for & catalogue media")
    opg_mode.add_option('--ssonly',action="store_true",dest="xcode",default=False,help="Capture screenshot only")

    # Scanning options
    opg_scan = optparse.OptionGroup(oparser, "Scanning", "Options for media scanner")
    opg_scan.add_option('-S','--single',action="store_true",dest="single",default=False,help="Single-file Mode")
    opg_scan.add_option('-X','--nosend',action="store_true",dest="nosend",default=False,help="Disable sending data to remote server")
    opg_scan.add_option('--scraper',action="store",dest="scraper",default="tvdb",help="Choose scraper to use [tvdb,mal,ann] (default=%default)")
    opg_scan.add_option('--pretty',action="store_true",dest="pretty",default=False,help="Pretty-print JSON output")
    opg_scan.add_option('-Z','--nochecksum',action="store_true",dest="nochecksum",default=False,help="Disable checksum calculation during file scanning")
    opg_scan.add_option('--mforce',action="store_true",dest="mforce",default=False,help="Force rescan all files, even if no changes detected")

    # Transcoding options
    opg_xcode = optparse.OptionGroup(oparser, "Transcoding", "Options for transcoding video")
    opg_xcode.add_option('--bake',action="store",dest="bake",default=False,metavar="SUBID",help="Bake subtitles (hardsub), specify sub track ID")
    opg_xcode.add_option('--subtype',action="store",dest="subtype",default="ass",metavar="TYPE",help="Specify subtitle track type [ass,srt] (default=%default)")
    opg_xcode.add_option('-x','--scale',action="store",dest="scale",default=False,metavar="RES",help="Scale video resolution (RES=width:height)")
    opg_xcode.add_option('--anamorphic',action="store_true",dest="anamorphic",default=False,help="Perform anamorphic widescreen compensation")
    opg_xcode.add_option('--aid',action="store",dest="aid",default=False,metavar="AID",help="Audio track ID (default is lowest-numbered track)")
    opg_xcode.add_option('--abr',action="store",dest="abr",default=128,metavar="KBPS",help="Audio bitrate in kbps (default=%default)")
    opg_xcode.add_option('--acopy',action="store_true",dest="acopy",default=False,help="Audio track, direct stream copy")
    opg_xcode.add_option('--downmix',action="store_true",dest="downmix",default=False,help="Downmix audio from 5.1 to Stereo")
    opg_xcode.add_option('--flv',action="store_true",dest="flv",default=False,help="Output in FLV container")
    opg_xcode.add_option('--daignore',action="store_true",dest="daignore",default=False,help="Ignore errors when dumping attachments")

    # Framegrab options
    opg_vscap = optparse.OptionGroup(oparser, "Framegrab", "Options for screenshot capture")
    opg_vscap.add_option('--vscap',action="store",dest="vscap",default=False,metavar="OFFSET",help="Capture frame at specified OFFSET in seconds (integer)")

    # Versioning options
    opg_version = optparse.OptionGroup(oparser, "ID & Version Info", "Options for file ID and encode versioning")
    opg_version.add_option('-q','--id',action="store",dest="id",default=False,metavar="ID",help="Specify file ID; metadata is pulled from database")
    opg_version.add_option('-A','--autoid',action="store_true",dest="autoid",default=False,help="Calculate ID from MD5 checksum (use for existing entries)")
    opg_version.add_option('-H','--location',action="store",dest="location",default=False,metavar="HOSTKEY",help="Specify source location key (hostname with underscores)")
    opg_version.add_option('--vername',action="store",dest="vername",default=False,metavar="NAME",help="Specify version name")

    # Metadata options
    opg_meta = optparse.OptionGroup(oparser, "Metadata", "Options for specifying additional metadata which will be included in the database entry for this video")
    opg_meta.add_option('--title',action="store",dest="title",default=False,metavar="VAL",help="Metadata: Episode/Video Title")
    opg_meta.add_option('--series',action="store",dest="series",default=False,metavar="VAL",help="Metadata: Series Title")
    opg_meta.add_option('--episode',action="store",dest="episode",default=False,metavar="NUM",help="Metadata: Episode Number")
    opg_meta.add_option('--season',action="store",dest="season",default=False,metavar="NUM",help="Metadata: Season Number")
    opg_meta.add_option('--special',action="store",dest="special",default=False,metavar="VAL",help="Metadata: Special Episode Title")
    opg_meta.add_option('--fansub',action="store",dest="fansub",default=False,metavar="GROUP",help="Metadata: Fansub Group Name")
    opg_meta.add_option('--dub',action="store",dest="dub",default=False,metavar="LANG",help="Metadata: Dub Language")

    # add groups to parser
    oparser.add_option_group(opg_mode)
    oparser.add_option_group(opg_scan)
    oparser.add_option_group(opg_xcode)
    oparser.add_option_group(opg_vscap)
    oparser.add_option_group(opg_version)
    oparser.add_option_group(opg_meta)

    options, args = oparser.parse_args(sys.argv[1:])
    return options

##############################################################################
## Entry point
##

if __name__ == '__main__':
    show_banner()
    loglevel(LL.DEBUG)
    xopt = parse_cli()

    # import

    # Get ffmpeg version
    ffmpeg.locate()
    ffver = ffmpeg.version()
    logthis("FFmpeg Version:",suffix="%s (%s)" % (ffver['version'],ffver['date']),loglevel=LL.VERBOSE)
